configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.5.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

apply plugin: 'eclipse'

eclipse {
	classpath {
		file {
			whenMerged { classpath ->
				classpath.entries.removeAll { it.kind == "con" }
			}
			withXml { provider ->
				def node = provider.asNode()
				node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8/'])
				node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
			}
		}
	}
	jdt {
		file {
			withProperties {properties ->
				properties.setProperty('org.eclipse.jdt.core.compiler.processAnnotations', 'enabled')
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}
